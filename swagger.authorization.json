{
  "swagger": "2.0",
  "info": {
    "title": "Box Platform API",
    "description": "[Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.",
    "termsOfService": "https://cloud.app.box.com/s/rmwxu64h1ipr41u49w3bbuvbsa29wku9",
    "contact": {
      "name": "Box, Inc",
      "url": "https://box.dev",
      "email": "devrel@box.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "2.0"
  },
  "host": "api.box.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/oauth2/token": {
      "post": {
        "operationId": "post_oauth2_token",
        "summary": "Request an access token",
        "description": "Request an Access Token using either a client-side obtained OAuth2\nauthorization code or a server-side JWT assertion.\n\nAn Access Token is a string that enables Box to verify that a\nrequest belongs to an authorized session. In the normal order of\noperations you will begin by requesting authentication from the\n[authorize](#get-authorize) endpoint and Box will send you an\nauthorization code.\n\nYou will then send this code to this endpoint to exchange it for\nan Access Token. The returned Access Token can then be used to to make\nBox API calls.",
        "tags": [
          "Authorization"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Returns a new Access Token that can be used to make authenticated\nAPI calls by passing along the token in a authorization header as\nfollows `Authorization: Bearer <Token>`.",
            "schema": {
              "$ref": "#/definitions/AccessToken"
            }
          },
          "400": {
            "description": "An authentication error.",
            "schema": {
              "$ref": "#/definitions/OAuth2Error"
            }
          }
        },
        "parameters": [],
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    },
    "/oauth2/revoke": {
      "post": {
        "operationId": "post_oauth2_revoke",
        "summary": "Revoke an access token",
        "description": "Revoke an active Access Token, effectively logging a user out\nthat has been previously authenticated.",
        "tags": [
          "Authorization"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "Returns an empty response when the token was successfully revoked."
          },
          "400": {
            "description": "An authentication error.",
            "schema": {
              "$ref": "#/definitions/OAuth2Error"
            }
          }
        },
        "parameters": [],
        "consumes": [
          "application/x-www-form-urlencoded"
        ]
      }
    }
  },
  "securityDefinitions": {
    "OAuth2Security": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://account.box.com/api/oauth2/authorize",
      "tokenUrl": "https://api.box.com/oauth2/token",
      "scopes": {
        "root_readonly": "Read all files and folders stored in Box",
        "root_readwrite": "Read and write all files and folders stored in Box",
        "manage_app_users": "Provision and manage app users",
        "manage_managed_users": "Provision and manage managed users",
        "manage_groups": "Manage an enterprise's groups",
        "manage_webhook": "Create webhooks programmatically through the API",
        "manage_enterprise_properties": "Manage enterprise properties",
        "manage_data_retention": "Manage data retention polices",
        "manage_legal_hold": "Manage Legal Holds"
      }
    }
  },
  "security": [
    {
      "OAuth2Security": []
    }
  ],
  "definitions": {
    "AccessToken": {
      "title": "Access Token",
      "description": "A token that can be used to make authenticated API calls.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/AccessToken--Mini"
        },
        {},
        {
          "properties": {
            "refresh_token": {
              "type": "string",
              "format": "token",
              "description": "The refresh token for this access token, which can be used\nto request a new access token when the current one expires."
            },
            "issued_token_type": {
              "type": "string",
              "format": "urn",
              "enum": [
                "urn:ietf:params:oauth:token-type:access_token"
              ],
              "description": "The type of downscoped access token returned. This is only\nreturned if an access token has been downscoped."
            }
          }
        }
      ]
    },
    "OAuth2Error": {
      "title": "OAuth2 Error",
      "description": "An OAuth2 error",
      "properties": {
        "error": {
          "type": "string",
          "description": "The type of the error returned."
        },
        "error_description": {
          "type": "string",
          "description": "The type of the error returned."
        }
      }
    },
    "AccessToken--Mini": {
      "title": "Access Token Mini",
      "description": "The basics of an access token",
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string",
          "format": "token",
          "description": "The requested access token."
        },
        "expires_in": {
          "type": "integer",
          "format": "int64",
          "description": "The time in seconds in seconds by which this token will expire."
        },
        "token_type": {
          "type": "string",
          "enum": [
            "bearer"
          ],
          "description": "The type of access token returned."
        },
        "restricted_to": {
          "type": "array",
          "description": "The permissions that this access token permits,\nproviding a list of resources (files, folders, etc)\nand the scopes permitted for each of those resources.",
          "items": {
            "$ref": "#/definitions/FileScope"
          }
        }
      }
    },
    "FileScope": {
      "title": "File Scope",
      "description": "A relation between a file and the scopes for which the file can be accessed",
      "properties": {
        "scope": {
          "type": "string",
          "description": "The file scopes for the file access",
          "enum": [
            "annotation_edit",
            "annotation_view_all",
            "annotation_view_self",
            "base_explorer",
            "base_picker",
            "base_preview",
            "base_upload",
            "item_delete",
            "item_download",
            "item_preview",
            "item_rename",
            "item_share",
            null
          ]
        },
        "object": {
          "allOf": [
            {
              "$ref": "#/definitions/File--Mini"
            },
            {
              "description": "The file for which the file can be accessed"
            }
          ]
        }
      }
    },
    "File--Mini": {
      "title": "File (Mini)",
      "description": "A mini representation of a file, used when\nnested under another resource.",
      "allOf": [
        {
          "$ref": "#/definitions/File--Base"
        },
        {
          "properties": {
            "sequence_id": {
              "type": "string",
              "description": "A unique identifier that can be used in combination\nwith the `/events` endpoint."
            },
            "name": {
              "type": "string",
              "description": "The name of the file"
            }
          }
        }
      ]
    },
    "File--Base": {
      "title": "File (Base)",
      "description": "The bare basic representation of a file, the minimal\namount of fields returned when using the `fields` query\nparameter.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the url `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
        },
        "etag": {
          "type": "string",
          "description": "The HTTP etag of this file. This can be used within some API\nendpoints in the `If-Match` and `If-None-Match` headers to only\nperform changes on the file if (no) changes have happened."
        },
        "type": {
          "type": "string",
          "description": "`file`",
          "enum": [
            "file"
          ]
        }
      }
    }
  }
}